// <auto-generated />
using System;
using MapHive.Core.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace MapHive.Core.DAL.Migrations
{
    [DbContext(typeof(MapHiveDbContext))]
    partial class MapHiveDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("mh_meta")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("MapHive.Core.DataModel.Application", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("uuid");

                    b.Property<DateTime?>("CreateDateUtc")
                        .HasColumnName("create_date_utc");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<string>("Description")
                        .HasColumnName("description");

                    b.Property<DateTime?>("EndDateUtc")
                        .HasColumnName("end_date_utc");

                    b.Property<bool>("IsApi")
                        .HasColumnName("is_api");

                    b.Property<bool>("IsCommon")
                        .HasColumnName("is_common");

                    b.Property<bool>("IsDefault")
                        .HasColumnName("is_default");

                    b.Property<bool>("IsHive")
                        .HasColumnName("is_hive");

                    b.Property<bool>("IsHome")
                        .HasColumnName("is_home");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<string>("LicenseOptionsSerialized")
                        .HasColumnName("license_options");

                    b.Property<DateTime?>("ModifyDateUtc")
                        .HasColumnName("modify_date_utc");

                    b.Property<string>("Name")
                        .HasColumnName("name");

                    b.Property<Guid?>("ProviderId")
                        .HasColumnName("provider_id");

                    b.Property<bool>("RequiresAuth")
                        .HasColumnName("requires_auth");

                    b.Property<string>("ShortName")
                        .HasColumnName("short_name");

                    b.Property<string>("Urls")
                        .HasColumnName("urls");

                    b.Property<bool>("UseSplashscreen")
                        .HasColumnName("use_splashscreen");

                    b.HasKey("Uuid");

                    b.HasIndex("CreateDateUtc")
                        .HasName("idx_create_date_application");

                    b.HasIndex("ShortName")
                        .IsUnique()
                        .HasName("uq_short_name_application");

                    b.ToTable("applications","mh_meta");
                });

            modelBuilder.Entity("MapHive.Core.DataModel.EmailTemplateLocalization", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("uuid");

                    b.Property<string>("ApplicationName")
                        .HasColumnName("application_name");

                    b.Property<DateTime?>("CreateDateUtc")
                        .HasColumnName("create_date_utc");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<string>("Description")
                        .HasColumnName("description");

                    b.Property<DateTime?>("EndDateUtc")
                        .HasColumnName("end_date_utc");

                    b.Property<string>("Identifier")
                        .HasColumnName("identifier");

                    b.Property<bool>("IsBodyHtml")
                        .HasColumnName("is_body_html");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<DateTime?>("ModifyDateUtc")
                        .HasColumnName("modify_date_utc");

                    b.Property<string>("Name")
                        .HasColumnName("name");

                    b.Property<string>("TranslationsSerialized")
                        .HasColumnName("translations");

                    b.HasKey("Uuid");

                    b.HasIndex("ApplicationName")
                        .HasName("idx_app_name_emailtemplatelocalization");

                    b.HasIndex("CreateDateUtc")
                        .HasName("idx_create_date_emailtemplatelocalization");

                    b.HasIndex("ApplicationName", "Identifier")
                        .IsUnique()
                        .HasName("uq_app_name_translation_identifier_emailtemplatelocalization");

                    b.ToTable("email_templates","mh_localization");
                });

            modelBuilder.Entity("MapHive.Core.DataModel.Lang", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("uuid");

                    b.Property<DateTime?>("CreateDateUtc")
                        .HasColumnName("create_date_utc");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<string>("Description")
                        .HasColumnName("description");

                    b.Property<DateTime?>("EndDateUtc")
                        .HasColumnName("end_date_utc");

                    b.Property<bool>("IsDefault")
                        .HasColumnName("is_default");

                    b.Property<string>("LangCode")
                        .HasColumnName("lang_code");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<DateTime?>("ModifyDateUtc")
                        .HasColumnName("modify_date_utc");

                    b.Property<string>("Name")
                        .HasColumnName("name");

                    b.HasKey("Uuid");

                    b.HasIndex("CreateDateUtc")
                        .HasName("idx_create_date_lang");

                    b.ToTable("langs","mh_localization");
                });

            modelBuilder.Entity("MapHive.Core.DataModel.Link", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<Guid>("ChildTypeUuid")
                        .HasColumnName("child_type_uuid");

                    b.Property<Guid>("ChildUuid")
                        .HasColumnName("child_uuid");

                    b.Property<string>("LinkDataSerialized")
                        .HasColumnName("link_data");

                    b.Property<Guid>("ParentTypeUuid")
                        .HasColumnName("parent_type_uuid");

                    b.Property<Guid>("ParentUuid")
                        .HasColumnName("parent_uuid");

                    b.Property<int?>("SortOrder")
                        .HasColumnName("sort_order");

                    b.HasKey("Id");

                    b.HasIndex("ChildTypeUuid")
                        .HasName("idx_child_type_uuid_link");

                    b.HasIndex("ChildUuid")
                        .HasName("idx_child_uuid_link");

                    b.HasIndex("ParentTypeUuid")
                        .HasName("idx_parent_type_uuid_link");

                    b.HasIndex("ParentUuid")
                        .HasName("idx_parent_uuid_link");

                    b.ToTable("links","mh_meta");
                });

            modelBuilder.Entity("MapHive.Core.DataModel.LocalizationClass", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("uuid");

                    b.Property<string>("ApplicationName")
                        .HasColumnName("application_name");

                    b.Property<string>("ClassName")
                        .HasColumnName("class_name");

                    b.Property<DateTime?>("CreateDateUtc")
                        .HasColumnName("create_date_utc");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("EndDateUtc")
                        .HasColumnName("end_date_utc");

                    b.Property<string>("InheritedClassName")
                        .HasColumnName("inherited_class_name");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<DateTime?>("ModifyDateUtc")
                        .HasColumnName("modify_date_utc");

                    b.HasKey("Uuid");

                    b.HasIndex("CreateDateUtc")
                        .HasName("idx_create_date_localizationclass");

                    b.HasIndex("ApplicationName", "ClassName")
                        .IsUnique()
                        .HasName("uq_app_name_class_name_localizationclass");

                    b.ToTable("localization_classes","mh_localization");
                });

            modelBuilder.Entity("MapHive.Core.DataModel.MapHiveUser", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("uuid");

                    b.Property<string>("Bio")
                        .HasColumnName("bio");

                    b.Property<string>("Company")
                        .HasColumnName("company");

                    b.Property<string>("ContactPhone")
                        .HasColumnName("contact_phone");

                    b.Property<DateTime?>("CreateDateUtc")
                        .HasColumnName("create_date_utc");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<string>("Department")
                        .HasColumnName("department");

                    b.Property<string>("Email")
                        .HasColumnName("email");

                    b.Property<DateTime?>("EndDateUtc")
                        .HasColumnName("end_date_utc");

                    b.Property<string>("Forename")
                        .HasColumnName("forename");

                    b.Property<string>("GravatarEmail")
                        .HasColumnName("gravatar_email");

                    b.Property<bool>("IsAccountClosed")
                        .HasColumnName("is_account_closed");

                    b.Property<bool>("IsAccountVerified")
                        .HasColumnName("is_account_verified");

                    b.Property<bool>("IsOrgUser")
                        .HasColumnName("is_org_user");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<string>("Location")
                        .HasColumnName("location");

                    b.Property<DateTime?>("ModifyDateUtc")
                        .HasColumnName("modify_date_utc");

                    b.Property<Guid?>("ParentOrganizationId")
                        .HasColumnName("parent_org_id");

                    b.Property<Guid?>("ProfilePictureId")
                        .HasColumnName("profile_picture_id");

                    b.Property<string>("Slug")
                        .HasColumnName("slug");

                    b.Property<string>("Surname")
                        .HasColumnName("surname");

                    b.Property<Guid?>("UserOrgId")
                        .HasColumnName("user_org_id");

                    b.Property<bool>("VisibleInCatalogue")
                        .HasColumnName("visible_in_catalogue");

                    b.HasKey("Uuid");

                    b.HasIndex("CreateDateUtc")
                        .HasName("idx_create_date_maphiveuser");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasName("uq_email_maphiveuser");

                    b.HasIndex("Slug")
                        .IsUnique()
                        .HasName("uq_slug_maphiveuser");

                    b.ToTable("users","mh_meta");
                });

            modelBuilder.Entity("MapHive.Core.DataModel.ObjectType", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("uuid");

                    b.Property<string>("Name")
                        .HasColumnName("name");

                    b.HasKey("Uuid");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasName("uq_name_objecttype");

                    b.ToTable("object_types","mh_meta");
                });

            modelBuilder.Entity("MapHive.Core.DataModel.Organization", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("uuid");

                    b.Property<string>("BillingAddress")
                        .HasColumnName("billing_address");

                    b.Property<string>("BillingEmail")
                        .HasColumnName("billing_email");

                    b.Property<string>("BillingExtraInfoSerialized")
                        .HasColumnName("billing_extra_info");

                    b.Property<DateTime?>("CreateDateUtc")
                        .HasColumnName("create_date_utc");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<string>("Description")
                        .HasColumnName("description");

                    b.Property<string>("DisplayName")
                        .HasColumnName("display_name");

                    b.Property<string>("Email")
                        .HasColumnName("email");

                    b.Property<DateTime?>("EndDateUtc")
                        .HasColumnName("end_date_utc");

                    b.Property<string>("GravatarEmail")
                        .HasColumnName("gravatar_email");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<string>("LicenseOptionsSerialized")
                        .HasColumnName("license_options");

                    b.Property<string>("Location")
                        .HasColumnName("location");

                    b.Property<DateTime?>("ModifyDateUtc")
                        .HasColumnName("modify_date_utc");

                    b.Property<Guid?>("ProfilePictureId")
                        .HasColumnName("profile_picture_id");

                    b.Property<string>("Slug")
                        .HasColumnName("slug");

                    b.Property<string>("Url")
                        .HasColumnName("url");

                    b.HasKey("Uuid");

                    b.HasIndex("CreateDateUtc")
                        .HasName("idx_create_date_organization");

                    b.HasIndex("Slug")
                        .IsUnique()
                        .HasName("uq_slug_organization");

                    b.ToTable("organizations","mh_meta");
                });

            modelBuilder.Entity("MapHive.Core.DataModel.OrganizationDatabase", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("uuid");

                    b.Property<DateTime?>("CreateDateUtc")
                        .HasColumnName("create_date_utc");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<int>("DataSourceProvider")
                        .HasColumnName("provider");

                    b.Property<string>("DbName")
                        .HasColumnName("db_name");

                    b.Property<DateTime?>("EndDateUtc")
                        .HasColumnName("end_date_utc");

                    b.Property<string>("Identifier")
                        .HasColumnName("identifier");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<DateTime?>("ModifyDateUtc")
                        .HasColumnName("modify_date_utc");

                    b.Property<Guid>("OrganizationId")
                        .HasColumnName("organization_id");

                    b.Property<string>("Pass")
                        .HasColumnName("password");

                    b.Property<string>("ServerHost")
                        .HasColumnName("server_host");

                    b.Property<string>("ServerName");

                    b.Property<int?>("ServerPort")
                        .HasColumnName("server_port");

                    b.Property<string>("ServiceDb")
                        .HasColumnName("service_db_name");

                    b.Property<string>("ServiceUserName")
                        .HasColumnName("service_user_name");

                    b.Property<string>("ServiceUserPass")
                        .HasColumnName("service_user_password");

                    b.Property<string>("UserName")
                        .HasColumnName("user_name");

                    b.HasKey("Uuid");

                    b.HasIndex("CreateDateUtc")
                        .HasName("idx_create_date_organizationdatabase");

                    b.HasIndex("OrganizationId", "Identifier")
                        .IsUnique()
                        .HasName("uq_org_uuid_identifier_organizationdatabase");

                    b.ToTable("organization_databases","mh_meta");
                });

            modelBuilder.Entity("MapHive.Core.DataModel.Role", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("uuid");

                    b.Property<DateTime?>("CreateDateUtc")
                        .HasColumnName("create_date_utc");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<string>("Description")
                        .HasColumnName("description");

                    b.Property<DateTime?>("EndDateUtc")
                        .HasColumnName("end_date_utc");

                    b.Property<string>("Identifier")
                        .HasColumnName("identifier");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<DateTime?>("ModifyDateUtc")
                        .HasColumnName("modify_date_utc");

                    b.Property<string>("Name")
                        .HasColumnName("name");

                    b.Property<string>("PrivilegesSerialized")
                        .HasColumnName("privileges");

                    b.HasKey("Uuid");

                    b.HasIndex("CreateDateUtc")
                        .HasName("idx_create_date_role");

                    b.ToTable("roles","mh_meta");
                });

            modelBuilder.Entity("MapHive.Core.DataModel.Team", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("uuid");

                    b.Property<DateTime?>("CreateDateUtc")
                        .HasColumnName("create_date_utc");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<string>("Description")
                        .HasColumnName("description");

                    b.Property<DateTime?>("EndDateUtc")
                        .HasColumnName("end_date_utc");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<DateTime?>("ModifyDateUtc")
                        .HasColumnName("modify_date_utc");

                    b.Property<string>("Name")
                        .HasColumnName("name");

                    b.HasKey("Uuid");

                    b.HasIndex("CreateDateUtc")
                        .HasName("idx_create_date_team");

                    b.ToTable("teams","mh_meta");
                });

            modelBuilder.Entity("MapHive.Core.DataModel.Token", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("uuid");

                    b.Property<Guid?>("ApplicationId")
                        .HasColumnName("application_id");

                    b.Property<bool>("CanIgnoreReferrer")
                        .HasColumnName("can_ignore_referrer");

                    b.Property<DateTime?>("CreateDateUtc")
                        .HasColumnName("create_date_utc");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<string>("Description")
                        .HasColumnName("description");

                    b.Property<DateTime?>("EndDateUtc")
                        .HasColumnName("end_date_utc");

                    b.Property<bool>("IsMaster")
                        .HasColumnName("is_master");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<DateTime?>("ModifyDateUtc")
                        .HasColumnName("modify_date_utc");

                    b.Property<string>("Name")
                        .HasColumnName("name");

                    b.Property<Guid?>("OrganizationId")
                        .HasColumnName("organization_id");

                    b.Property<string>("ReferrersSerialized")
                        .HasColumnName("referrers");

                    b.HasKey("Uuid");

                    b.HasIndex("CreateDateUtc")
                        .HasName("idx_create_date_token");

                    b.ToTable("tokens","mh_meta");
                });

            modelBuilder.Entity("MapHive.Core.DataModel.TranslationKey", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("uuid");

                    b.Property<DateTime?>("CreateDateUtc")
                        .HasColumnName("create_date_utc");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("EndDateUtc")
                        .HasColumnName("end_date_utc");

                    b.Property<string>("Key")
                        .HasColumnName("key");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnName("last_modified_by");

                    b.Property<Guid>("LocalizationClassUuid")
                        .HasColumnName("localization_class_uuid");

                    b.Property<DateTime?>("ModifyDateUtc")
                        .HasColumnName("modify_date_utc");

                    b.Property<string>("TranslationsSerialized")
                        .HasColumnName("translations");

                    b.HasKey("Uuid");

                    b.HasIndex("CreateDateUtc")
                        .HasName("idx_create_date_translationkey");

                    b.HasIndex("LocalizationClassUuid", "Key")
                        .IsUnique()
                        .HasName("uq_localization_class_translation_key_translationkey");

                    b.ToTable("translation_keys","mh_localization");
                });
#pragma warning restore 612, 618
        }
    }
}
