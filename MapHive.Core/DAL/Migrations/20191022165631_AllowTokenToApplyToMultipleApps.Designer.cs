// <auto-generated />
using System;
using MapHive.Core.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace MapHive.Core.DAL.Migrations
{
    [DbContext(typeof(MapHiveDbContext))]
    [Migration("20191022165631_AllowTokenToApplyToMultipleApps")]
    partial class AllowTokenToApplyToMultipleApps
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("mh_meta")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("MapHive.Core.DataModel.Application", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("uuid")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("CreateDateUtc")
                        .HasColumnName("create_date_utc")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnName("created_by")
                        .HasColumnType("uuid");

                    b.Property<string>("CustomDataSerialized")
                        .HasColumnName("custom_data")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("text");

                    b.Property<DateTime?>("EndDateUtc")
                        .HasColumnName("end_date_utc")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("HasDesktopVersion")
                        .HasColumnName("has_desktop")
                        .HasColumnType("boolean");

                    b.Property<bool>("HasMobileVersion")
                        .HasColumnName("has_mobile")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsApi")
                        .HasColumnName("is_api")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCommon")
                        .HasColumnName("is_common")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDefault")
                        .HasColumnName("is_default")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHive")
                        .HasColumnName("is_hive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHome")
                        .HasColumnName("is_home")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnName("last_modified_by")
                        .HasColumnType("uuid");

                    b.Property<string>("LicenseOptionsSerialized")
                        .HasColumnName("license_options")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifyDateUtc")
                        .HasColumnName("modify_date_utc")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("text");

                    b.Property<Guid?>("ProviderId")
                        .HasColumnName("provider_id")
                        .HasColumnType("uuid");

                    b.Property<bool>("RequiresAuth")
                        .HasColumnName("requires_auth")
                        .HasColumnType("boolean");

                    b.Property<string>("ShortName")
                        .HasColumnName("short_name")
                        .HasColumnType("text");

                    b.Property<string>("Urls")
                        .HasColumnName("urls")
                        .HasColumnType("text");

                    b.Property<bool>("UseSplashscreen")
                        .HasColumnName("use_splashscreen")
                        .HasColumnType("boolean");

                    b.Property<string>("VisualIdentificationSerialized")
                        .HasColumnName("visual_identification")
                        .HasColumnType("text");

                    b.HasKey("Uuid")
                        .HasName("pk_applications");

                    b.HasIndex("CreateDateUtc")
                        .HasName("idx_application_create_date");

                    b.HasIndex("ShortName")
                        .IsUnique()
                        .HasName("idx_application_uq_short_name");

                    b.ToTable("applications","mh_meta");
                });

            modelBuilder.Entity("MapHive.Core.DataModel.EmailTemplateLocalization", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("uuid")
                        .HasColumnType("uuid");

                    b.Property<string>("ApplicationIdentifier")
                        .HasColumnName("application_identifier")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreateDateUtc")
                        .HasColumnName("create_date_utc")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnName("created_by")
                        .HasColumnType("uuid");

                    b.Property<string>("CustomDataSerialized")
                        .HasColumnName("custom_data")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("text");

                    b.Property<DateTime?>("EndDateUtc")
                        .HasColumnName("end_date_utc")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Identifier")
                        .HasColumnName("identifier")
                        .HasColumnType("text");

                    b.Property<bool>("IsBodyHtml")
                        .HasColumnName("is_body_html")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnName("last_modified_by")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("ModifyDateUtc")
                        .HasColumnName("modify_date_utc")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("text");

                    b.Property<string>("TranslationsSerialized")
                        .HasColumnName("translations")
                        .HasColumnType("text");

                    b.HasKey("Uuid")
                        .HasName("pk_email_templates");

                    b.HasIndex("ApplicationIdentifier")
                        .HasName("idx_email_template_localization_app_identifier");

                    b.HasIndex("CreateDateUtc")
                        .HasName("idx_email_template_localization_create_date");

                    b.HasIndex("ApplicationIdentifier", "Identifier")
                        .IsUnique()
                        .HasName("idx_email_template_localization_uq_app_name_translation_identifier");

                    b.ToTable("email_templates","mh_localization");
                });

            modelBuilder.Entity("MapHive.Core.DataModel.Lang", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("uuid")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("CreateDateUtc")
                        .HasColumnName("create_date_utc")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnName("created_by")
                        .HasColumnType("uuid");

                    b.Property<string>("CustomDataSerialized")
                        .HasColumnName("custom_data")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("text");

                    b.Property<DateTime?>("EndDateUtc")
                        .HasColumnName("end_date_utc")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDefault")
                        .HasColumnName("is_default")
                        .HasColumnType("boolean");

                    b.Property<string>("LangCode")
                        .HasColumnName("lang_code")
                        .HasColumnType("text");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnName("last_modified_by")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("ModifyDateUtc")
                        .HasColumnName("modify_date_utc")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("text");

                    b.HasKey("Uuid")
                        .HasName("pk_langs");

                    b.HasIndex("CreateDateUtc")
                        .HasName("idx_lang_create_date");

                    b.ToTable("langs","mh_localization");
                });

            modelBuilder.Entity("MapHive.Core.DataModel.Link", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<Guid>("ChildTypeUuid")
                        .HasColumnName("child_type_uuid")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ChildUuid")
                        .HasColumnName("child_uuid")
                        .HasColumnType("uuid");

                    b.Property<string>("LinkDataSerialized")
                        .HasColumnName("link_data")
                        .HasColumnType("text");

                    b.Property<Guid>("ParentTypeUuid")
                        .HasColumnName("parent_type_uuid")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ParentUuid")
                        .HasColumnName("parent_uuid")
                        .HasColumnType("uuid");

                    b.Property<int?>("SortOrder")
                        .HasColumnName("sort_order")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ChildTypeUuid")
                        .HasName("idx_link_child_type_uuid");

                    b.HasIndex("ChildUuid")
                        .HasName("idx_link_child_uuid");

                    b.HasIndex("ParentTypeUuid")
                        .HasName("idx_link_parent_type_uuid");

                    b.HasIndex("ParentUuid")
                        .HasName("idx_link_parent_uuid");

                    b.ToTable("links");
                });

            modelBuilder.Entity("MapHive.Core.DataModel.LocalizationClass", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("uuid")
                        .HasColumnType("uuid");

                    b.Property<string>("ApplicationName")
                        .HasColumnName("application_name")
                        .HasColumnType("text");

                    b.Property<string>("ClassName")
                        .HasColumnName("class_name")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreateDateUtc")
                        .HasColumnName("create_date_utc")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnName("created_by")
                        .HasColumnType("uuid");

                    b.Property<string>("CustomDataSerialized")
                        .HasColumnName("custom_data")
                        .HasColumnType("text");

                    b.Property<DateTime?>("EndDateUtc")
                        .HasColumnName("end_date_utc")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("InheritedClassName")
                        .HasColumnName("inherited_class_name")
                        .HasColumnType("text");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnName("last_modified_by")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("ModifyDateUtc")
                        .HasColumnName("modify_date_utc")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Uuid")
                        .HasName("pk_localization_classes");

                    b.HasIndex("CreateDateUtc")
                        .HasName("idx_localization_class_create_date");

                    b.HasIndex("ApplicationName", "ClassName")
                        .IsUnique()
                        .HasName("idx_localization_class_uq_app_name_class_name");

                    b.ToTable("localization_classes","mh_localization");
                });

            modelBuilder.Entity("MapHive.Core.DataModel.MapHiveUser", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("uuid")
                        .HasColumnType("uuid");

                    b.Property<string>("Bio")
                        .HasColumnName("bio")
                        .HasColumnType("text");

                    b.Property<string>("Company")
                        .HasColumnName("company")
                        .HasColumnType("text");

                    b.Property<string>("ContactPhone")
                        .HasColumnName("contact_phone")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreateDateUtc")
                        .HasColumnName("create_date_utc")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnName("created_by")
                        .HasColumnType("uuid");

                    b.Property<string>("CustomDataSerialized")
                        .HasColumnName("custom_data")
                        .HasColumnType("text");

                    b.Property<string>("Department")
                        .HasColumnName("department")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnName("email")
                        .HasColumnType("text");

                    b.Property<DateTime?>("EndDateUtc")
                        .HasColumnName("end_date_utc")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Forename")
                        .HasColumnName("forename")
                        .HasColumnType("text");

                    b.Property<string>("Fullname")
                        .HasColumnName("full_name")
                        .HasColumnType("text");

                    b.Property<string>("GravatarEmail")
                        .HasColumnName("gravatar_email")
                        .HasColumnType("text");

                    b.Property<bool>("IsAccountClosed")
                        .HasColumnName("is_account_closed")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAccountVerified")
                        .HasColumnName("is_account_verified")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOrgUser")
                        .HasColumnName("is_org_user")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnName("last_modified_by")
                        .HasColumnType("uuid");

                    b.Property<string>("Location")
                        .HasColumnName("location")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifyDateUtc")
                        .HasColumnName("modify_date_utc")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("ParentOrganizationId")
                        .HasColumnName("parent_org_id")
                        .HasColumnType("uuid");

                    b.Property<string>("ProfilePicture")
                        .HasColumnName("profile_picture")
                        .HasColumnType("text");

                    b.Property<string>("Slug")
                        .HasColumnName("slug")
                        .HasColumnType("text");

                    b.Property<string>("Surname")
                        .HasColumnName("surname")
                        .HasColumnType("text");

                    b.Property<Guid?>("UserOrgId")
                        .HasColumnName("user_org_id")
                        .HasColumnType("uuid");

                    b.Property<bool>("VisibleInCatalogue")
                        .HasColumnName("visible_in_catalogue")
                        .HasColumnType("boolean");

                    b.HasKey("Uuid")
                        .HasName("pk_users");

                    b.HasIndex("CreateDateUtc")
                        .HasName("idx_map_hive_user_create_date");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasName("idx_map_hive_user_uq_email");

                    b.HasIndex("Slug")
                        .IsUnique()
                        .HasName("idx_map_hive_user_uq_slug");

                    b.ToTable("users","mh_meta");
                });

            modelBuilder.Entity("MapHive.Core.DataModel.ObjectType", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("uuid")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("text");

                    b.HasKey("Uuid");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasName("idx_object_type_uq_name");

                    b.ToTable("object_types");
                });

            modelBuilder.Entity("MapHive.Core.DataModel.Organization", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("uuid")
                        .HasColumnType("uuid");

                    b.Property<string>("BillingAddress")
                        .HasColumnName("billing_address")
                        .HasColumnType("text");

                    b.Property<string>("BillingEmail")
                        .HasColumnName("billing_email")
                        .HasColumnType("text");

                    b.Property<string>("BillingExtraInfoSerialized")
                        .HasColumnName("billing_extra_info")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreateDateUtc")
                        .HasColumnName("create_date_utc")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnName("created_by")
                        .HasColumnType("uuid");

                    b.Property<string>("CustomDataSerialized")
                        .HasColumnName("custom_data")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("text");

                    b.Property<string>("DisplayName")
                        .HasColumnName("display_name")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnName("email")
                        .HasColumnType("text");

                    b.Property<DateTime?>("EndDateUtc")
                        .HasColumnName("end_date_utc")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("GravatarEmail")
                        .HasColumnName("gravatar_email")
                        .HasColumnType("text");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnName("last_modified_by")
                        .HasColumnType("uuid");

                    b.Property<string>("LicenseOptionsSerialized")
                        .HasColumnName("license_options")
                        .HasColumnType("text");

                    b.Property<string>("Location")
                        .HasColumnName("location")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifyDateUtc")
                        .HasColumnName("modify_date_utc")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("ProfilePictureId")
                        .HasColumnName("profile_picture_id")
                        .HasColumnType("uuid");

                    b.Property<string>("Slug")
                        .HasColumnName("slug")
                        .HasColumnType("text");

                    b.Property<string>("Url")
                        .HasColumnName("url")
                        .HasColumnType("text");

                    b.Property<string>("VisualIdentificationSerialized")
                        .HasColumnName("visual_identification")
                        .HasColumnType("text");

                    b.HasKey("Uuid")
                        .HasName("pk_organizations");

                    b.HasIndex("CreateDateUtc")
                        .HasName("idx_organization_create_date");

                    b.HasIndex("Slug")
                        .IsUnique()
                        .HasName("idx_organization_uq_slug");

                    b.ToTable("organizations","mh_meta");
                });

            modelBuilder.Entity("MapHive.Core.DataModel.OrganizationDatabase", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("uuid")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("CreateDateUtc")
                        .HasColumnName("create_date_utc")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnName("created_by")
                        .HasColumnType("uuid");

                    b.Property<string>("CustomDataSerialized")
                        .HasColumnName("custom_data")
                        .HasColumnType("text");

                    b.Property<int>("DataSourceProvider")
                        .HasColumnName("provider")
                        .HasColumnType("integer");

                    b.Property<string>("DbName")
                        .HasColumnName("db_name")
                        .HasColumnType("text");

                    b.Property<DateTime?>("EndDateUtc")
                        .HasColumnName("end_date_utc")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Identifier")
                        .HasColumnName("identifier")
                        .HasColumnType("text");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnName("last_modified_by")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("ModifyDateUtc")
                        .HasColumnName("modify_date_utc")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("OrganizationId")
                        .HasColumnName("organization_id")
                        .HasColumnType("uuid");

                    b.Property<string>("Pass")
                        .HasColumnName("password")
                        .HasColumnType("text");

                    b.Property<string>("ServerHost")
                        .HasColumnName("server_host")
                        .HasColumnType("text");

                    b.Property<string>("ServerName")
                        .HasColumnType("text");

                    b.Property<int?>("ServerPort")
                        .HasColumnName("server_port")
                        .HasColumnType("integer");

                    b.Property<string>("ServiceDb")
                        .HasColumnName("service_db_name")
                        .HasColumnType("text");

                    b.Property<string>("ServiceUserName")
                        .HasColumnName("service_user_name")
                        .HasColumnType("text");

                    b.Property<string>("ServiceUserPass")
                        .HasColumnName("service_user_password")
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .HasColumnName("user_name")
                        .HasColumnType("text");

                    b.HasKey("Uuid")
                        .HasName("pk_organization_databases");

                    b.HasIndex("CreateDateUtc")
                        .HasName("idx_organization_database_create_date");

                    b.HasIndex("OrganizationId", "Identifier")
                        .IsUnique()
                        .HasName("idx_organization_database_uq_org_uuid_identifier");

                    b.ToTable("organization_databases","mh_meta");
                });

            modelBuilder.Entity("MapHive.Core.DataModel.Resource", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("uuid")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("CreateDateUtc")
                        .HasColumnName("create_date_utc")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnName("created_by")
                        .HasColumnType("uuid");

                    b.Property<string>("CustomDataSerialized")
                        .HasColumnName("custom_data")
                        .HasColumnType("text");

                    b.Property<byte[]>("Data")
                        .HasColumnName("data")
                        .HasColumnType("bytea");

                    b.Property<DateTime?>("EndDateUtc")
                        .HasColumnName("end_date_utc")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Identifier")
                        .HasColumnName("identifier")
                        .HasColumnType("text");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnName("last_modified_by")
                        .HasColumnType("uuid");

                    b.Property<string>("Mime")
                        .HasColumnName("mime")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifyDateUtc")
                        .HasColumnName("modify_date_utc")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("OriginalFileName")
                        .HasColumnName("original_file_name")
                        .HasColumnType("text");

                    b.Property<Guid?>("OwnerId")
                        .HasColumnName("owner_id")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("OwnerTypeId")
                        .HasColumnName("owner_type_id")
                        .HasColumnType("uuid");

                    b.HasKey("Uuid")
                        .HasName("pk_resources");

                    b.HasIndex("CreateDateUtc")
                        .HasName("idx_resource_create_date");

                    b.HasIndex("OwnerId")
                        .HasName("idx_resource_owner_id");

                    b.ToTable("resources");
                });

            modelBuilder.Entity("MapHive.Core.DataModel.Role", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("uuid")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("CreateDateUtc")
                        .HasColumnName("create_date_utc")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnName("created_by")
                        .HasColumnType("uuid");

                    b.Property<string>("CustomDataSerialized")
                        .HasColumnName("custom_data")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("text");

                    b.Property<DateTime?>("EndDateUtc")
                        .HasColumnName("end_date_utc")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Identifier")
                        .HasColumnName("identifier")
                        .HasColumnType("text");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnName("last_modified_by")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("ModifyDateUtc")
                        .HasColumnName("modify_date_utc")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("text");

                    b.Property<string>("PrivilegesSerialized")
                        .HasColumnName("privileges")
                        .HasColumnType("text");

                    b.HasKey("Uuid")
                        .HasName("pk_roles");

                    b.HasIndex("CreateDateUtc")
                        .HasName("idx_role_create_date");

                    b.ToTable("roles");
                });

            modelBuilder.Entity("MapHive.Core.DataModel.Team", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("uuid")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("CreateDateUtc")
                        .HasColumnName("create_date_utc")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnName("created_by")
                        .HasColumnType("uuid");

                    b.Property<string>("CustomDataSerialized")
                        .HasColumnName("custom_data")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("text");

                    b.Property<DateTime?>("EndDateUtc")
                        .HasColumnName("end_date_utc")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnName("last_modified_by")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("ModifyDateUtc")
                        .HasColumnName("modify_date_utc")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("text");

                    b.HasKey("Uuid")
                        .HasName("pk_teams");

                    b.HasIndex("CreateDateUtc")
                        .HasName("idx_team_create_date");

                    b.ToTable("teams","mh_meta");
                });

            modelBuilder.Entity("MapHive.Core.DataModel.Token", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("uuid")
                        .HasColumnType("uuid");

                    b.Property<string>("ApplicationIdsSerialized")
                        .HasColumnName("application_ids")
                        .HasColumnType("text");

                    b.Property<bool>("CanIgnoreReferrer")
                        .HasColumnName("can_ignore_referrer")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("CreateDateUtc")
                        .HasColumnName("create_date_utc")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnName("created_by")
                        .HasColumnType("uuid");

                    b.Property<string>("CustomDataSerialized")
                        .HasColumnName("custom_data")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("text");

                    b.Property<DateTime?>("EndDateUtc")
                        .HasColumnName("end_date_utc")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsMaster")
                        .HasColumnName("is_master")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnName("last_modified_by")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("ModifyDateUtc")
                        .HasColumnName("modify_date_utc")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("text");

                    b.Property<Guid?>("OrganizationId")
                        .HasColumnName("organization_id")
                        .HasColumnType("uuid");

                    b.Property<string>("ReferrersSerialized")
                        .HasColumnName("referrers")
                        .HasColumnType("text");

                    b.HasKey("Uuid")
                        .HasName("pk_tokens");

                    b.HasIndex("CreateDateUtc")
                        .HasName("idx_token_create_date");

                    b.ToTable("tokens","mh_meta");
                });

            modelBuilder.Entity("MapHive.Core.DataModel.TranslationKey", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("uuid")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("CreateDateUtc")
                        .HasColumnName("create_date_utc")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnName("created_by")
                        .HasColumnType("uuid");

                    b.Property<string>("CustomDataSerialized")
                        .HasColumnName("custom_data")
                        .HasColumnType("text");

                    b.Property<DateTime?>("EndDateUtc")
                        .HasColumnName("end_date_utc")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool?>("Inherited")
                        .HasColumnName("inherited")
                        .HasColumnType("boolean");

                    b.Property<string>("Key")
                        .HasColumnName("key")
                        .HasColumnType("text");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnName("last_modified_by")
                        .HasColumnType("uuid");

                    b.Property<Guid>("LocalizationClassUuid")
                        .HasColumnName("localization_class_uuid")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("ModifyDateUtc")
                        .HasColumnName("modify_date_utc")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool?>("Overwrites")
                        .HasColumnName("overwrites")
                        .HasColumnType("boolean");

                    b.Property<string>("TranslationsSerialized")
                        .HasColumnName("translations")
                        .HasColumnType("text");

                    b.HasKey("Uuid")
                        .HasName("pk_translation_keys");

                    b.HasIndex("CreateDateUtc")
                        .HasName("idx_translation_key_create_date");

                    b.HasIndex("LocalizationClassUuid", "Key")
                        .IsUnique()
                        .HasName("idx_translation_key_uq_localization_class_translation_key");

                    b.ToTable("translation_keys","mh_localization");
                });

            modelBuilder.Entity("MapHive.Core.DataModel.TranslationKeyExtended", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("uuid")
                        .HasColumnType("uuid");

                    b.Property<string>("ApplicationName")
                        .HasColumnName("application_name")
                        .HasColumnType("text");

                    b.Property<string>("ClassName")
                        .HasColumnName("class_name")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreateDateUtc")
                        .HasColumnName("create_date_utc")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnName("created_by")
                        .HasColumnType("uuid");

                    b.Property<string>("CustomDataSerialized")
                        .HasColumnName("custom_data")
                        .HasColumnType("text");

                    b.Property<DateTime?>("EndDateUtc")
                        .HasColumnName("end_date_utc")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("FullKey")
                        .HasColumnName("full_key")
                        .HasColumnType("text");

                    b.Property<bool?>("Inherited")
                        .HasColumnName("inherited")
                        .HasColumnType("boolean");

                    b.Property<string>("InheritedClassName")
                        .HasColumnName("inherited_class_name")
                        .HasColumnType("text");

                    b.Property<string>("Key")
                        .HasColumnName("key")
                        .HasColumnType("text");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnName("last_modified_by")
                        .HasColumnType("uuid");

                    b.Property<Guid>("LocalizationClassUuid")
                        .HasColumnName("localization_class_uuid")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("ModifyDateUtc")
                        .HasColumnName("modify_date_utc")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool?>("Overwrites")
                        .HasColumnName("overwrites")
                        .HasColumnType("boolean");

                    b.Property<string>("TranslationsSerialized")
                        .HasColumnName("translations")
                        .HasColumnType("text");

                    b.HasKey("Uuid")
                        .HasName("pk_translation_keys_extended");

                    b.HasIndex("CreateDateUtc")
                        .HasName("idx_translation_key_extended_create_date");

                    b.HasIndex("LocalizationClassUuid", "Key")
                        .IsUnique()
                        .HasName("idx_translation_key_uq_localization_class_translation_key");

                    b.ToTable("translation_keys_extended","mh_localization");
                });
#pragma warning restore 612, 618
        }
    }
}
